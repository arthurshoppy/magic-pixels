[
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "IncorrectValue",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "PaymentFailed",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SellerInsufficientPixels",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "TradeAlreadyExists",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "Unauthorized",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "bytes32",
        "name": "id",
        "type": "bytes32"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "creator",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "receiver",
            "type": "address"
          },
          {
            "internalType": "bytes",
            "name": "pixels",
            "type": "bytes"
          },
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          },
          {
            "internalType": "enum LibAuctionHouse.TradeType",
            "name": "tradeType",
            "type": "uint8"
          }
        ],
        "indexed": false,
        "internalType": "struct LibAuctionHouse.Trade",
        "name": "trade",
        "type": "tuple"
      }
    ],
    "name": "TradeCanceled",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "bytes32",
        "name": "id",
        "type": "bytes32"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "creator",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "receiver",
            "type": "address"
          },
          {
            "internalType": "bytes",
            "name": "pixels",
            "type": "bytes"
          },
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          },
          {
            "internalType": "enum LibAuctionHouse.TradeType",
            "name": "tradeType",
            "type": "uint8"
          }
        ],
        "indexed": false,
        "internalType": "struct LibAuctionHouse.Trade",
        "name": "trade",
        "type": "tuple"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "closing",
        "type": "address"
      }
    ],
    "name": "TradeClosed",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "bytes32",
        "name": "id",
        "type": "bytes32"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "creator",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "receiver",
            "type": "address"
          },
          {
            "internalType": "bytes",
            "name": "pixels",
            "type": "bytes"
          },
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          },
          {
            "internalType": "enum LibAuctionHouse.TradeType",
            "name": "tradeType",
            "type": "uint8"
          }
        ],
        "indexed": false,
        "internalType": "struct LibAuctionHouse.Trade",
        "name": "trade",
        "type": "tuple"
      }
    ],
    "name": "TradeOpened",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "id",
        "type": "bytes32"
      }
    ],
    "name": "cancelTrade",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "id",
        "type": "bytes32"
      }
    ],
    "name": "closeTrade",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "id",
        "type": "bytes32"
      }
    ],
    "name": "getTrade",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "creator",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "receiver",
            "type": "address"
          },
          {
            "internalType": "bytes",
            "name": "pixels",
            "type": "bytes"
          },
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          },
          {
            "internalType": "enum LibAuctionHouse.TradeType",
            "name": "tradeType",
            "type": "uint8"
          }
        ],
        "internalType": "struct LibAuctionHouse.Trade",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "receiver",
        "type": "address"
      },
      {
        "internalType": "bytes",
        "name": "pixels",
        "type": "bytes"
      },
      {
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      },
      {
        "internalType": "enum LibAuctionHouse.TradeType",
        "name": "tradeType",
        "type": "uint8"
      }
    ],
    "name": "openTrade",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  }
]