/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  PxlsCore,
  PxlsCoreInterface,
} from "../../../../../contracts/diamond/facets/MagicPixels/PxlsCore";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8[][]",
        name: "pixels",
        type: "uint8[][]",
      },
    ],
    name: "Conjured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthFound",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batches",
        type: "uint256",
      },
    ],
    name: "conjure",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "indices",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "delays",
        type: "uint256[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint8[][]",
        name: "plate",
        type: "uint8[][]",
      },
    ],
    name: "restore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611248806100206000396000f3fe6080604052600436106100345760003560e01c80633d5d190c1461003957806341b798f31461005b578063749c51b71461006e575b600080fd5b34801561004557600080fd5b50610059610054366004610df9565b61008e565b005b610059610069366004610e65565b610436565b34801561007a57600080fd5b50610059610089366004610e7e565b610938565b3360009081527fa32ac351050f01911d543184484dd0b56f1a44a545355195dea6fa48038b73746020526040902080547fa32ac351050f01911d543184484dd0b56f1a44a545355195dea6fa48038b736f919085111561012a5760405162461bcd60e51b81526020600482015260126024820152713737ba1032b737bab3b4103834bc32b6399760711b60448201526064015b60405180910390fd5b60008567ffffffffffffffff81111561014557610145610edf565b60405190808252806020026020018201604052801561017857816020015b60608152602001906001900390816101635790505b50905060005b868110156102a957600088888381811061019a5761019a610ef5565b602002919091013591506001905050835481106101ef5760405162461bcd60e51b81526020600482015260136024820152723834bc32b61037baba1037b3103930b733b29760691b6044820152606401610121565b83818154811061020157610201610ef5565b9060005260206000200180548060200260200160405190810160405280929190818152602001828054801561027357602002820191906000526020600020906000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116102445790505b505050505083838151811061028a5761028a610ef5565b60200260200101819052505080806102a190610f21565b91505061017e565b506102f2878780806020026020016040519081016040528093929190818152602001838360200280828437600092018290525092506102ed9150600190508a610f3a565b610a87565b60005b868110156103c257600088888381811061031157610311610ef5565b90506020020135905060006001858054905061032d9190610f3a565b90508082101561037f5784818154811061034957610349610ef5565b9060005260206000200185838154811061036557610365610ef5565b9060005260206000200190805461037d929190610c07565b505b8480548061038f5761038f610f53565b6001900381819060005260206000200160006103ab9190610c65565b9055505080806103ba90610f21565b9150506102f5565b50600683015460405163c68f940760e01b81526001600160a01b039091169063c68f9407906103fb90339085908a908a90600401610feb565b600060405180830381600087803b15801561041557600080fd5b505af1158015610429573d6000803e3d6000fd5b5050505050505050505050565b7fa32ac351050f01911d543184484dd0b56f1a44a545355195dea6fa48038b7372547fa32ac351050f01911d543184484dd0b56f1a44a545355195dea6fa48038b736f90610485908390611047565b3410156104c65760405162461bcd60e51b815260206004820152600f60248201526e3737ba1032b737bab3b41032ba341760891b6044820152606401610121565b600044423260405160200161050093929190928352602083019190915260601b6bffffffffffffffffffffffff1916604082015260540190565b60408051808303601f190181529190528051602090910120825490915060009061053290610100900460ff1685611047565b67ffffffffffffffff81111561054a5761054a610edf565b60405190808252806020026020018201604052801561057d57816020015b60608152602001906001900390816105685790505b5033600090815260058501602052604081209192505b84546105a790610100900460ff1687611047565b8110156107a8576000846105bc83600161105e565b60408051602081019390935282015260600160408051601f19818403018152919052805160209091012090506000806105f8620186a084611087565b905060005b60048901548110156106725788600401818154811061061e5761061e610ef5565b90600052602060002090600a91828204019190066003029054906101000a900462ffffff1662ffffff1682116106605761065981600161105e565b9250610672565b8061066a81610f21565b9150506105fd565b5060008260ff1667ffffffffffffffff81111561069157610691610edf565b6040519080825280602002602001820160405280156106ba578160200160208202803683370190505b50905060005b8360ff16811015610749578954604080516020808201899052818301859052825180830384018152606090920190925280519101206107089162010000900460ff1690611087565b61071390600161105e565b82828151811061072557610725610ef5565b60ff909216602092830291909101909101528061074181610f21565b9150506106c0565b508087868151811061075d5761075d610ef5565b60209081029190910181019190915286546001810188556000888152829020835161079093919092019190840190610c8d565b505050505080806107a090610f21565b915050610593565b50336001600160a01b03167f4cedbde145137bd1ce225e166797d12f63b1a93683396f7f011f02fe55288e54836040516107e2919061109b565b60405180910390a2662386f26fc10000471015610800575050505050565b60008460010154846108129190611087565b905060005b8681101561092f5760018601546000908661083484610141611047565b6040805160208101939093528201526060016040516020818303038152906040528051906020012060001c6108699190611087565b905082810361091c57600087600201544761088491906110b5565b604051909150600090339083908381818185875af1925050503d80600081146108c9576040519150601f19603f3d011682016040523d82523d6000602084013e6108ce565b606091505b5050905080156109195760405182815233907f9c54512ebccc9466525ae423442f95b4cf1672f614c43c7e3eff4dcb20c863829060200160405180910390a250505050505050505050565b50505b508061092781610f21565b915050610817565b50505050505050565b7fa32ac351050f01911d543184484dd0b56f1a44a545355195dea6fa48038b7375547fa32ac351050f01911d543184484dd0b56f1a44a545355195dea6fa48038b736f906001600160a01b031633146109c25760405162461bcd60e51b815260206004820152600c60248201526b3737ba1030b63637bbb2b21760a11b6044820152606401610121565b6001600160a01b03841660009081526005820160205260408120905b83811015610a3c57818585838181106109f9576109f9610ef5565b9050602002810190610a0b91906110c9565b825460018101845560009384526020909320610a2993019190610d2e565b5080610a3481610f21565b9150506109de565b50846001600160a01b03167f4cedbde145137bd1ce225e166797d12f63b1a93683396f7f011f02fe55288e548585604051610a7892919061115c565b60405180910390a25050505050565b8181808203610a97575050505050565b6000856002610aa68787610f3a565b610ab091906110b5565b610aba908761105e565b81518110610aca57610aca610ef5565b602002602001015190505b818311610bd9575b80868481518110610af057610af0610ef5565b60200260200101511115610b105782610b0881610f21565b935050610add565b858281518110610b2257610b22610ef5565b6020026020010151811115610b435781610b3b816111fb565b925050610b10565b818311610bd457858281518110610b5c57610b5c610ef5565b6020026020010151868481518110610b7657610b76610ef5565b6020026020010151878581518110610b9057610b90610ef5565b60200260200101888581518110610ba957610ba9610ef5565b60209081029190910101919091525282610bc281610f21565b9350508180610bd0906111fb565b9250505b610ad5565b81851015610bec57610bec868684610a87565b83831015610bff57610bff868486610a87565b505050505050565b82805482825590600052602060002090601f01602090048101928215610c5557600052602060002091601f016020900482015b82811115610c55578254825591600101919060010190610c3a565b50610c61929150610d98565b5090565b50805460008255601f016020900490600052602060002090810190610c8a9190610d98565b50565b82805482825590600052602060002090601f01602090048101928215610c555791602002820160005b83821115610cf457835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302610cb6565b8015610d215782816101000a81549060ff0219169055600101602081600001049283019260010302610cf4565b5050610c61929150610d98565b82805482825590600052602060002090601f01602090048101928215610c555791602002820160005b83821115610cf457833560ff1683826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302610d57565b5b80821115610c615760008155600101610d99565b60008083601f840112610dbf57600080fd5b50813567ffffffffffffffff811115610dd757600080fd5b6020830191508360208260051b8501011115610df257600080fd5b9250929050565b60008060008060408587031215610e0f57600080fd5b843567ffffffffffffffff80821115610e2757600080fd5b610e3388838901610dad565b90965094506020870135915080821115610e4c57600080fd5b50610e5987828801610dad565b95989497509550505050565b600060208284031215610e7757600080fd5b5035919050565b600080600060408486031215610e9357600080fd5b83356001600160a01b0381168114610eaa57600080fd5b9250602084013567ffffffffffffffff811115610ec657600080fd5b610ed286828701610dad565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610f3357610f33610f0b565b5060010190565b81810381811115610f4d57610f4d610f0b565b92915050565b634e487b7160e01b600052603160045260246000fd5b600082825180855260208086019550808260051b8401018186016000805b85811015610fdd57868403601f19018a52825180518086529086019086860190845b81811015610fc857835160ff1683529288019291880191600101610fa9565b50509a86019a94505091840191600101610f87565b509198975050505050505050565b6001600160a01b038516815260606020820181905260009061100f90830186610f69565b82810360408401528381526001600160fb1b0384111561102e57600080fd5b8360051b80866020840137016020019695505050505050565b8082028115828204841417610f4d57610f4d610f0b565b80820180821115610f4d57610f4d610f0b565b634e487b7160e01b600052601260045260246000fd5b60008261109657611096611071565b500690565b6020815260006110ae6020830184610f69565b9392505050565b6000826110c4576110c4611071565b500490565b6000808335601e198436030181126110e057600080fd5b83018035915067ffffffffffffffff8211156110fb57600080fd5b6020019150600581901b3603821315610df257600080fd5b818352600060208085019450826000805b8681101561115057823560ff811680821461113d578384fd5b8952509683019691830191600101611124565b50959695505050505050565b6020808252818101839052600090600560408085019086831b86010187855b888110156111ed57878303603f190184528135368b9003601e190181126111a157600080fd5b8a01868101903567ffffffffffffffff8111156111bd57600080fd5b80871b36038213156111ce57600080fd5b6111d9858284611113565b95880195945050509085019060010161117b565b509098975050505050505050565b60008161120a5761120a610f0b565b50600019019056fea2646970667358221220e0583c501828a9a733ccb25f428134763ade97aca639042a79aec19d77ab494e64736f6c63430008120033";

type PxlsCoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PxlsCoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PxlsCore__factory extends ContractFactory {
  constructor(...args: PxlsCoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PxlsCore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PxlsCore__factory {
    return super.connect(runner) as PxlsCore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PxlsCoreInterface {
    return new Interface(_abi) as PxlsCoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PxlsCore {
    return new Contract(address, _abi, runner) as unknown as PxlsCore;
  }
}
