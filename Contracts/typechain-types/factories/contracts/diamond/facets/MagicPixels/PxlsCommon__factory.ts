/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  PxlsCommon,
  PxlsCommonInterface,
} from "../../../../../contracts/diamond/facets/MagicPixels/PxlsCommon";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "pixelsOf",
    outputs: [
      {
        internalType: "uint8[][]",
        name: "",
        type: "uint8[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061035a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632e1a7d4d1461003b5780632f294f9d14610063575b600080fd5b61004e61004936600461024e565b610083565b60405190151581526020015b60405180910390f35b610076610071366004610267565b610162565b60405161005a9190610297565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546000906001600160a01b031633146100d65760405163472511eb60e11b815233600482015260240160405180910390fd5b60006101097fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d8060008114610153576040519150601f19603f3d011682016040523d82523d6000602084013e610158565b606091505b5090949350505050565b6001600160a01b03811660009081527fa32ac351050f01911d543184484dd0b56f1a44a545355195dea6fa48038b737460209081526040808320805482518185028101850190935280835260609492939192909184015b828210156102435760008481526020908190208301805460408051828502810185019091528181529283018282801561022f57602002820191906000526020600020906000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116102005790505b5050505050815260200190600101906101b9565b505050509050919050565b60006020828403121561026057600080fd5b5035919050565b60006020828403121561027957600080fd5b81356001600160a01b038116811461029057600080fd5b9392505050565b6000602080830181845280855180835260408601915060408160051b87010192508387016000805b8381101561031657888603603f19018552825180518088529088019088880190845b8181101561030057835160ff168352928a0192918a01916001016102e1565b50909750505093860193918601916001016102bf565b50939897505050505050505056fea26469706673582212200f1d494f05da63b4e9568edb295e35f870be3e1f4d5b9c7f5ff7ee88fe6cb38c64736f6c63430008120033";

type PxlsCommonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PxlsCommonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PxlsCommon__factory extends ContractFactory {
  constructor(...args: PxlsCommonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PxlsCommon & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PxlsCommon__factory {
    return super.connect(runner) as PxlsCommon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PxlsCommonInterface {
    return new Interface(_abi) as PxlsCommonInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PxlsCommon {
    return new Contract(address, _abi, runner) as unknown as PxlsCommon;
  }
}
