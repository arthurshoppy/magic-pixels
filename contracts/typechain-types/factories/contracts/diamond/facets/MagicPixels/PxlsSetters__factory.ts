/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  PxlsSetters,
  PxlsSettersInterface,
} from "../../../../../contracts/diamond/facets/MagicPixels/PxlsSetters";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "s",
        type: "uint8",
      },
    ],
    name: "setBatchSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24[]",
        name: "dp",
        type: "uint24[]",
      },
    ],
    name: "setDepthProbabilities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "setMagicPlates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "m",
        type: "uint8",
      },
    ],
    name: "setMaxPixel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "s",
        type: "uint8",
      },
    ],
    name: "setPlateSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "p",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610592806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806313f7e326146100675780631434d0c21461007c57806391b7f5ed1461008f578063ed802614146100a2578063f99c5b97146100b5578063fea4890a146100c8575b600080fd5b61007a61007536600461043b565b6100db565b005b61007a61008a36600461043b565b61013d565b61007a61009d366004610465565b6101a1565b61007a6100b036600461047e565b6101ff565b61007a6100c336600461043b565b61027a565b61007a6100d63660046104a7565b6102e0565b60008051602061053d833981519152546001600160a01b0316331461011a5760405163472511eb60e11b81523360048201526024015b60405180910390fd5b60008051602061051d833981519152805460ff191660ff92909216919091179055565b60008051602061053d833981519152546001600160a01b031633146101775760405163472511eb60e11b8152336004820152602401610111565b60008051602061051d833981519152805461ff00191661010060ff90931692909202919091179055565b60008051602061053d833981519152546001600160a01b031633146101db5760405163472511eb60e11b8152336004820152602401610111565b7fa32ac351050f01911d543184484dd0b56f1a44a545355195dea6fa48038b737255565b60008051602061053d833981519152546001600160a01b031633146102395760405163472511eb60e11b8152336004820152602401610111565b7fa32ac351050f01911d543184484dd0b56f1a44a545355195dea6fa48038b737580546001600160a01b0319166001600160a01b0392909216919091179055565b60008051602061053d833981519152546001600160a01b031633146102b45760405163472511eb60e11b8152336004820152602401610111565b60008051602061051d833981519152805462ff000019166201000060ff90931692909202919091179055565b60008051602061053d833981519152546001600160a01b0316331461031a5760405163472511eb60e11b8152336004820152602401610111565b6103457fa32ac351050f01911d543184484dd0b56f1a44a545355195dea6fa48038b73738383610375565b5060008051602061051d833981519152805463ff0000001916630100000060ff9093169290920291909117905550565b82805482825590600052602060002090600901600a900481019282156104165791602002820160005b838211156103e557833562ffffff1683826101000a81548162ffffff021916908362ffffff160217905550926020019260030160208160020104928301926001030261039e565b80156104145782816101000a81549062ffffff02191690556003016020816002010492830192600103026103e5565b505b50610422929150610426565b5090565b5b808211156104225760008155600101610427565b60006020828403121561044d57600080fd5b813560ff8116811461045e57600080fd5b9392505050565b60006020828403121561047757600080fd5b5035919050565b60006020828403121561049057600080fd5b81356001600160a01b038116811461045e57600080fd5b600080602083850312156104ba57600080fd5b823567ffffffffffffffff808211156104d257600080fd5b818501915085601f8301126104e657600080fd5b8135818111156104f557600080fd5b8660208260051b850101111561050a57600080fd5b6020929092019691955090935050505056fea32ac351050f01911d543184484dd0b56f1a44a545355195dea6fa48038b736fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320a2646970667358221220257d25d69cef54b01e6ba7a113aba7db035434010e661b04e878a95a39a1dfb864736f6c63430008120033";

type PxlsSettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PxlsSettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PxlsSetters__factory extends ContractFactory {
  constructor(...args: PxlsSettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PxlsSetters & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PxlsSetters__factory {
    return super.connect(runner) as PxlsSetters__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PxlsSettersInterface {
    return new Interface(_abi) as PxlsSettersInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PxlsSetters {
    return new Contract(address, _abi, runner) as unknown as PxlsSetters;
  }
}
