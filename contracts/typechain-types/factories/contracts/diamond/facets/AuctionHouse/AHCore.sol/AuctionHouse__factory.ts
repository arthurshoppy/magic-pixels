/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  AuctionHouse,
  AuctionHouseInterface,
} from "../../../../../../contracts/diamond/facets/AuctionHouse/AHCore.sol/AuctionHouse";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8[][]",
        name: "pixels",
        type: "uint8[][]",
      },
    ],
    name: "TradeClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "TradeOpened",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "cancelTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "closeTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getTrade",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint8[][]",
            name: "pixels",
            type: "uint8[][]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct LibAuctionHouse.Trade",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "getTrades",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint8[][]",
        name: "pixels",
        type: "uint8[][]",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "openTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611653806100206000396000f3fe60806040526004361061004a5760003560e01c80634bfad7c01461004f5780635177fd3b146100855780637439d3c61461009a5780637cfb41b8146100ad578063a3b13799146100cd575b600080fd5b34801561005b57600080fd5b5061006f61006a36600461107e565b6100fa565b60405161007c91906110a0565b60405180910390f35b6100986100933660046110e4565b610185565b005b6100986100a83660046110fd565b6104c4565b3480156100b957600080fd5b506100986100c83660046110e4565b61074e565b3480156100d957600080fd5b506100ed6100e83660046110e4565b6108e2565b60405161007c9190611189565b6001600160a01b03811660009081527f50e6db0ee6a1e6e0676f1837cc048e5c36c133a90fbafbfaa36526366e90b03f602090815260409182902080548351818402810184019094528084526060939283018282801561017957602002820191906000526020600020905b815481526020019060010190808311610165575b50505050509050919050565b60008181526000805160206115fe83398151915260209081526040808320815160808101835281546001600160a01b03908116825260018301541681850152600282018054845181870281018701865281815292959394860193879084015b8282101561026e5760008481526020908190208301805460408051828502810185019091528181529283018282801561025a57602002820191906000526020600020906000905b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161022b5790505b5050505050815260200190600101906101e4565b5050505081526020016003820154815250509050346000036103505780516001600160a01b0316156102cc5780516001600160a01b031632146102cc5760405162461bcd60e51b81526004016102c39061124c565b60405180910390fd5b6102df8160400151328360000151610a26565b606081015160405160009132918381818185875af1925050503d8060008114610324576040519150601f19603f3d011682016040523d82523d6000602084013e610329565b606091505b505090508061034a5760405162461bcd60e51b81526004016102c390611274565b50610464565b8060600151341461039a5760405162461bcd60e51b81526020600482015260146024820152731a5b98dbdc9c9958dd08195d1a08185b5bdd5b9d60621b60448201526064016102c3565b60208101516001600160a01b0316156103d95760208101516001600160a01b031632146103d95760405162461bcd60e51b81526004016102c39061124c565b805160608201516040516000926001600160a01b031691908381818185875af1925050503d8060008114610429576040519150601f19603f3d011682016040523d82523d6000602084013e61042e565b606091505b505090508061044f5760405162461bcd60e51b81526004016102c390611274565b6104628260400151836000015132610a26565b505b61046d82610d1f565b326001600160a01b031681600001516001600160a01b03167fe0262fa4b4b8df117ff636cd0a87d211a77071d7cf535f44f90ab7022f881de183604001516040516104b8919061129c565b60405180910390a35050565b6040516000805160206115fe833981519152906000906104ee90329088908890889060200161137b565b60408051601f1981840301815291815281516020928301206000818152928590529120549091506001600160a01b0316156105625760405162461bcd60e51b8152602060048201526014602482015273747261646520616c72656164792065786973747360601b60448201526064016102c3565b3460000361060957604080516080810182523281526001600160a01b038816602082015290810161059386886114a4565b815260209081018590526000838152848252604090819020835181546001600160a01b039182166001600160a01b03199182161783558585015160018401805491909316911617905590830151805191926105f692600285019290910190610e92565b50606082015181600301559050506106ea565b82341461064f5760405162461bcd60e51b81526020600482015260146024820152731a5b98dbdc9c9958dd08195d1a08185b5bdd5b9d60621b60448201526064016102c3565b604080516080810182526001600160a01b038816815232602082015290810161067886886114a4565b815260209081018590526000838152848252604090819020835181546001600160a01b039182166001600160a01b03199182161783558585015160018401805491909316911617905590830151805191926106db92600285019290910190610e92565b50606082015181600301559050505b326000818152600180850160209081526040808420805493840181558452922001839055517f0ab38872695ed13586378e0824a603ce547d1b24ab0f85d858b2e0fc19a362b79061073e9084815260200190565b60405180910390a2505050505050565b60008181526000805160206115fe83398151915260209081526040808320815160808101835281546001600160a01b03908116825260018301541681850152600282018054845181870281018701865281815292959394860193879084015b828210156108375760008481526020908190208301805460408051828502810185019091528181529283018282801561082357602002820191906000526020600020906000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116107f45790505b5050505050815260200190600101906107ad565b505050508152602001600382015481525050905061085482610d1f565b326001600160a01b031681602001516001600160a01b0316036108de57606081015160405160009132918381818185875af1925050503d80600081146108b6576040519150601f19603f3d011682016040523d82523d6000602084013e6108bb565b606091505b50509050806108dc5760405162461bcd60e51b81526004016102c390611274565b505b5050565b61091f604051806080016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001600081525090565b6000805160206115fe833981519152600083815260209182526040808220815160808101835281546001600160a01b039081168252600183015416818601526002820180548451818802810188018652818152929693959487019492939192909184015b82821015610a0d576000848152602090819020830180546040805182850281018501909152818152928301828280156109f957602002820191906000526020600020906000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116109ca5790505b505050505081526020019060010190610983565b5050505081526020016003820154815250509050919050565b6001600160a01b0382811660009081527fa32ac351050f01911d543184484dd0b56f1a44a545355195dea6fa48038b73746020526040808220928416825281207fa32ac351050f01911d543184484dd0b56f1a44a545355195dea6fa48038b736f92915b8651811015610d16576000878281518110610aa757610aa7611576565b6020908102919091010151845490915060005b8554811015610be2576000868581548110610ad757610ad7611576565b90600052602060002001805480602002602001604051908101604052809291908181526020018280548015610b4957602002820191906000526020600020906000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610b1a5790505b5050505050905060006001905060005b8551811015610bbc57828181518110610b7457610b74611576565b602002602001015160ff16868281518110610b9157610b91611576565b602002602001015160ff1614610baa5760009150610bbc565b80610bb4816115a2565b915050610b59565b508015610bcd578293505050610be2565b50508080610bda906115a2565b915050610aba565b5084548103610c335760405162461bcd60e51b815260206004820152601f60248201527f73656c6c657220646f6573206e6f74206f776e20616c6c20706978656c732e0060448201526064016102c3565b83858281548110610c4657610c46611576565b600091825260208083208454600181018655948452922091018054610c6f939290920191610eef565b50600060018a51610c8091906115bb565b905080821015610cd257858181548110610c9c57610c9c611576565b90600052602060002001868381548110610cb857610cb8611576565b90600052602060002001908054610cd0929190610eef565b505b85805480610ce257610ce26115d4565b600190038181906000526020600020016000610cfe9190610f49565b90555050508080610d0e906115a2565b915050610a8a565b50505050505050565b3260009081527f50e6db0ee6a1e6e0676f1837cc048e5c36c133a90fbafbfaa36526366e90b03f602052604081206000805160206115fe83398151915291805b8254811015610dcf5784838281548110610d7b57610d7b611576565b906000526020600020015403610d9357809150610dcf565b8254610da08260016115ea565b03610dbd5760405162461bcd60e51b81526004016102c39061124c565b80610dc7816115a2565b915050610d5f565b50815460011015610e245781548290610dea906001906115bb565b81548110610dfa57610dfa611576565b9060005260206000200154828281548110610e1757610e17611576565b6000918252602090912001555b81805480610e3457610e346115d4565b6000828152602080822083016000199081018390559092019092558582528490526040812080546001600160a01b03199081168255600182018054909116905590610e826002830182610f71565b6003820160009055505050505050565b828054828255906000526020600020908101928215610edf579160200282015b82811115610edf5782518051610ecf918491602090910190610f8f565b5091602001919060010190610eb2565b50610eeb929150611030565b5090565b82805482825590600052602060002090601f01602090048101928215610f3d57600052602060002091601f016020900482015b82811115610f3d578254825591600101919060010190610f22565b50610eeb92915061104d565b50805460008255601f016020900490600052602060002090810190610f6e919061104d565b50565b5080546000825590600052602060002090810190610f6e9190611030565b82805482825590600052602060002090601f01602090048101928215610f3d5791602002820160005b83821115610ff657835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302610fb8565b80156110235782816101000a81549060ff0219169055600101602081600001049283019260010302610ff6565b5050610eeb92915061104d565b80821115610eeb5760006110448282610f49565b50600101611030565b5b80821115610eeb576000815560010161104e565b80356001600160a01b038116811461107957600080fd5b919050565b60006020828403121561109057600080fd5b61109982611062565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156110d8578351835292840192918401916001016110bc565b50909695505050505050565b6000602082840312156110f657600080fd5b5035919050565b6000806000806060858703121561111357600080fd5b61111c85611062565b9350602085013567ffffffffffffffff8082111561113957600080fd5b818701915087601f83011261114d57600080fd5b81358181111561115c57600080fd5b8860208260051b850101111561117157600080fd5b95986020929092019750949560400135945092505050565b602080825282516001600160a01b0390811683830152838201511660408084019190915283015160806060840152805160a084018190526000929160c0600583901b8601810192918401919086019085805b828110156112325788860360bf19018452845180518088529088019088880190845b8181101561121c57835160ff168352928a0192918a01916001016111fd565b50909750505093860193928601926001016111db565b505050505060608501516080850152809250505092915050565b6020808252600e908201526d1b9bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6020808252600e908201526d1c185e5b595b9d0819985a5b195960921b604082015260600190565b6000602080830181845280855180835260408601915060408160051b87010192508387016000805b8381101561131b57888603603f19018552825180518088529088019088880190845b8181101561130557835160ff168352928a0192918a01916001016112e6565b50909750505093860193918601916001016112c4565b509398975050505050505050565b803560ff8116811461107957600080fd5b8183526000602080850194508260005b858110156113705760ff61135d83611329565b168752958201959082019060010161134a565b509495945050505050565b6001600160a01b038581168252841660208083019190915260606040830181905282018390526000906005906080808501919086841b86010187855b8881101561142957878303607f190185528135368b9003601e190181126113dd57600080fd5b8a01848101903567ffffffffffffffff8111156113f957600080fd5b80881b360382131561140a57600080fd5b61141585828461133a565b9686019694505050908301906001016113b7565b50909a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561147857611478611439565b604052919050565b600067ffffffffffffffff82111561149a5761149a611439565b5060051b60200190565b60006114b76114b284611480565b61144f565b83815260208082019190600586811b8601368111156114d557600080fd5b865b8181101561156957803567ffffffffffffffff8111156114f75760008081fd5b880136601f8201126115095760008081fd5b80356115176114b282611480565b81815290851b820186019086810190368311156115345760008081fd5b928701925b828410156115595761154a84611329565b82529287019290870190611539565b89525050509483019483016114d7565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016115b4576115b461158c565b5060010190565b818103818111156115ce576115ce61158c565b92915050565b634e487b7160e01b600052603160045260246000fd5b808201808211156115ce576115ce61158c56fe50e6db0ee6a1e6e0676f1837cc048e5c36c133a90fbafbfaa36526366e90b03ea264697066735822122029a9448d553bc94bac56acb596975df91cd2e60b707f505f906cded2104377ef64736f6c63430008120033";

type AuctionHouseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuctionHouseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuctionHouse__factory extends ContractFactory {
  constructor(...args: AuctionHouseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AuctionHouse & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AuctionHouse__factory {
    return super.connect(runner) as AuctionHouse__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuctionHouseInterface {
    return new Interface(_abi) as AuctionHouseInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AuctionHouse {
    return new Contract(address, _abi, runner) as unknown as AuctionHouse;
  }
}
