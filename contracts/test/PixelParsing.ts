import { expect } from 'chai'
import { bytesToPixelIds, bytesToPixels, pixelsToBytes } from '../scripts/libraries/pixel-parser'

describe('PixelParsing', function () {

	it('Should parse 256 pixels correctly', async function () {
		const data = "0x81420000b10000000d000000720000006b00000003000000510000002e000000bd0000008c0000001a000000a3000000449500004f000000395d0000b30e00002b00000050000000bd0000000c000000150000003d000000510000003f00000001ba0000140000000f0000002e00000051b00000130000008b0000000b000000360000005a00000095000000730000000b0000005d9f00004600000069430000080000007c00000025000000780000000c00000088000000894800003ebd00001c0000005b1c000005000000740000000d000000be000000015b0000ac1a00000d0000004900000024000000720000004b00000085000000a3000000300000007f5c0000300000008c000000b4000000780000001c0000009200000029000000aa0000006f0000000700000066000000311e0000140000004e00000067000000a7000000b300000066000000a03600009a800000b00000008d0000002f00000097000000bf000000660000007f000000a90000000c0000008000000058000000930000003e00000065000000a40000006f000000757e00008400000095000000a7000000b2bc0000340000006d30000055000000930000003c00000065a5000005000000b500000037000000aa00000006910000b0a800003f0000002100000035000000734b0000316100003f0000008c250000070000001700000016000000060000005a000000440000002d0000005f00000081000000a10000005e00000038110000a00000005800000012000000ba0000005b000000b80000004000000045000000810000001b9100007c00000011000000a8000000477d000082000000860000007d0000006a6500003c000000020000000a0000004d000000ad2e00002a180000975a0000ab000000bf9400006cbf0000b1000000580000001900000029000000440000001800000031000000240000004a0000003b0000001700000062000000040000000a00000024000000184e00002b0000005d000000680000000a0000008e0000000a000000124e000036bc00005fb100002c0000001552000094000000110000003f000000950000007a00000063000000170000000400000009860000a64f0000562b0000b583000012000000b0b600000d9400006e000000560000001300000083000000806400008b000000b82b00008500000062000000be7800006c000000280000001a0000004d000000610000008b0000002a000000bc0000005a0000004d0000004b0000009b74000050000000a7000000830000009100000067000000849a000039000000370000001d0000003b00000072000000260000003300000025000000900000003400000045000000698f00008e000000230000008f000000bf1c0000219100002a0000008a0000008100000014000000"

		const pixels = bytesToPixels(data)
		expect(pixels.length).eq(256, "bytesToPixels length mismatch.")
		const bytes = pixelsToBytes(pixels)
		expect(bytes).eq(data, "pixelsToBytes mismatch.")
		const bytes4Arr = bytesToPixelIds(bytes)
		expect(bytes4Arr.length).eq(256, "bytesToPixelBytes length mismatch.")

		const bytesFinal = ("0x" + bytes4Arr.map(bytes4 => bytes4.substring(2)).join("")) as `0x${string}`
		expect(data).eq(bytesFinal, "bytesToPixelBytes bytes mismatch.")
	})

})